%!PS

% Binding Box
%%BoundingBox: 0 0 50 50

% Order
/N 2 def

% Equation: X -> -YF+XFX+FY- (down right up)
/X {
    dup 0 ne
    {1 sub 7 {dup} repeat - Y F + X F X + F Y -}
    if pop
} def

% Equation: Y -> +XF-YFY-FX+ (up right down)
/Y {
    dup 0 ne
    {1 sub 7 {dup} repeat + X F - Y F Y - F X +}
    if pop
} def

% Equation: F -> λ
/F {
    0 eq {10 0 rlineto} if
} bind def

% Rotate: - -> 90° clockwise
/- {
    -90 rotate
} bind def

% Rotate: + -> 90° counter-clockwise
/+ {
    90 rotate
} bind def

% Cleaner lines
1 setlinejoin
1 setlinecap

% Drawing
newpath
    % Move to origin (need to fine tune this)
    130 550 moveto

    % Scale lines down with each iteration to constrain final size
    35 N 1 sub {2 div} repeat dup scale

    % Push N onto stack, call X
    N X
stroke

showpage